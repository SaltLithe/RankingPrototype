// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RankingCore.Persistence.Contexts;

#nullable disable

namespace RankingCore.Migrations
{
    [DbContext(typeof(RankingContext))]
    partial class RankingContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.5");

            modelBuilder.Entity("RankingCore.Persistence.Models.Account", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("AccountId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("AccountType")
                        .HasColumnType("INTEGER");

                    b.Property<int>("PlayerId")
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("UniquePlayerIdentifier")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("PlayerId");

                    b.ToTable("Accounts");
                });

            modelBuilder.Entity("RankingCore.Persistence.Models.Player", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("HighScore")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("LastHighScoreDate")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("LastScoreDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("PlayerName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("TotalScore")
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("UniquePlayerIdentifier")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Players");
                });

            modelBuilder.Entity("RankingCore.Persistence.Models.Score", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("PlayerId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ScoreAmount")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("ScoreRegisterDate")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("UniquePlayerIdentifier")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("PlayerId");

                    b.ToTable("Scores");
                });

            modelBuilder.Entity("RankingCore.Persistence.Models.Account", b =>
                {
                    b.HasOne("RankingCore.Persistence.Models.Player", null)
                        .WithMany("Accounts")
                        .HasForeignKey("PlayerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("RankingCore.Persistence.Models.Score", b =>
                {
                    b.HasOne("RankingCore.Persistence.Models.Player", null)
                        .WithMany("Scores")
                        .HasForeignKey("PlayerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("RankingCore.Persistence.Models.Player", b =>
                {
                    b.Navigation("Accounts");

                    b.Navigation("Scores");
                });
#pragma warning restore 612, 618
        }
    }
}
